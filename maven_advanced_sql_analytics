# 1 - Finding top traffic sources
select utm_source, utm_campaign, http_referer,
	count(distinct website_session_id)
from website_sessions
where created_at < '2012-4-12'
group by utm_source, utm_campaign, http_referer
order by count(distinct website_session_id) desc ;

# 2 - Traffic source conversion
select count(distinct website_sessions.website_session_id),
	count(distinct orders.order_id),
    count(distinct orders.order_id) / count(distinct website_sessions.website_session_id) as conv_rate
from website_sessions
	left join orders on website_sessions.website_session_id = orders.website_session_id
where website_sessions.created_at < '2012-4-14' and utm_source = 'gsearch' and utm_campaign = 'nonbrand' ;

# 3 - Traffic source trending
SELECT min(date(created_at)) as start_of_week, 
week(created_at), 
count(distinct website_session_id) as sessions 
FROM mavenfuzzyfactory.website_sessions
where created_at < '2012-5-10' and utm_source = 'gsearch' and utm_campaign = 'nonbrand'
group by week(created_at) ;

# 4 - Bid optimization for paid traffic
SELECT 
	device_type, 
    count(distinct website_sessions.website_session_id) as sessions, 
    count(distinct orders.order_id) as orders ,
    round(count(distinct orders.order_id) / count(distinct website_sessions.website_session_id)*100,2) as session_to_order_conv_rate 
FROM mavenfuzzyfactory.website_sessions
	left join orders on website_sessions.website_session_id = orders.website_session_id
where website_sessions.created_at < '2012-5-11' and utm_source='gsearch' and utm_campaign='nonbrand'
group by device_type
order by device_type desc ;
# CONCAT(FORMAT(COUNT(DISTINCT orders.order_id)/COUNT(DISTINCT website_sessions.website_session_id) * 100, 2), '%') AS conversion_rate

# 5 - Trending w/ granular segments
SELECT 
	min(date(created_at)),
	count(distinct case when device_type = 'mobile' then website_session_id else null end) as 'm_sessions', # 1 item orders
    count(distinct case when device_type = 'desktop' then website_session_id else null end) as 'd_sessions' # multiple items
FROM mavenfuzzyfactory.website_sessions
where (created_at between '2012-4-15' and '2012-6-9') and utm_source = 'gsearch' and utm_campaign = 'nonbrand'
    group by week(created_at) ;
    
# 6 - Finding top website pages
select pageview_url, count(distinct website_pageview_id)
from website_pageviews
where created_at < '2012-6-9'
group by pageview_url
order by count(distinct website_pageview_id) desc ;

# 7 - Finding top entry pages
create temporary table page_landings
select min(website_pageview_id), # selecting the first or minimum primary_key value from rows where website_session_id repeats
website_session_id, 
pageview_url from mavenfuzzyfactory.website_pageviews
where created_at < '2012-6-12'
group by website_session_id ; # is mandatory to group website_session_id's from where 'min' function selects the first(min) value

select page_landings.pageview_url, count(page_landings.pageview_url) from page_landings
	join website_pageviews on page_landings.`min(website_pageview_id)` = website_pageviews.website_pageview_id
group by page_landings.pageview_url ;




# IN PROGRESS BELOW #

/*
# 8 - Calculating bounce rates
create temporary table first_pageviews
select 
	website_session_id, 
	min(website_pageview_id) as min_pageview_id
from website_pageviews
where created_at < '2012-06-14'
group by 
	website_session_id ;


create temporary table sessions_landing_page_home
select 
	first_pageviews.website_session_id,
	website_pageviews.pageview_url as landing_page
from first_pageviews
	left join website_pageviews on website_pageviews.website_pageview_id = first_pageviews.min_pageview_id
where website_pageviews.pageview_url = '/home' ;


create temporary table bounced_sessions
select
	sessions_landing_page_home.website_session_id,
    sessions_landing_page_home.landing_page,
    count(website_pageviews.website_pageview_id) as count_of_pages_viewed
from sessions_landing_page_home
left join website_pageviews on sessions_landing_page_home.website_session_id = website_pageviews.website_session_id
group by 
    sessions_landing_page_home.website_session_id,
    sessions_landing_page_home.landing_page
having 
	count(website_pageviews.website_pageview_id) = 1 ;

select
	count(distinct sessions_landing_page_home.website_session_id) as sessions,
    count(distinct bounced_sessions.website_session_id) as bounced_sessions,
    count(distinct bounced_sessions.website_session_id) / count(distinct sessions_landing_page_home.website_session_id) as bounce_rate
from sessions_landing_page_home
	left join bounced_sessions on sessions_landing_page_home.website_session_id = bounced_sessions.website_session_id ;
    
# 9 - Analyzing landing page tests
SELECT 
	min(created_at) as first_created_at, 
    website_pageview_id as first_pageview_id 
FROM mavenfuzzyfactory.website_pageviews
where pageview_url = '/lander-1' ;
# analysis timeframe between '2012-06-19' and '2012-07-28'
*/
